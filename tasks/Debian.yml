---
# We now include mit.zabbix-agent.common via dependency in meta/main.yml
# This provides handlers like "Restart zabbix-agent" and vars like "zabbix_agent_conf_dir"

- name: Set is_lxc
  ansible.builtin.set_fact:
    is_lxc: "{{ 'lxc' in ansible_virtualization_tech_guest }}"

- name: Ensure needrestart is installed
  ansible.builtin.apt:
    pkg: needrestart
- name: Ensure zabbix_sender is installed
  ansible.builtin.command: test -f /usr/bin/zabbix_sender
  changed_when: false

- name: Copy needrestart blacklist
  ansible.builtin.copy:
    src: Debian/needrestart/conf.d/local-blacklist.conf
    dest: /etc/needrestart/conf.d/
    mode: "644"
- name: Copy sudo rules for needrestart
  ansible.builtin.copy:
    src: Debian/sudoers.d/local-mit-zabbix-agent-check-upgrades
    dest: /etc/sudoers.d/
    mode: "0440"
    validate: visudo -cf %s

- name: Add zabbix-agent configuration file
  ansible.builtin.copy:
    src: Debian/local-userparameter_check-upgrades.conf
    dest: "{{ zabbix_agent_conf_dir }}"
    mode: "0644"
  notify: Restart zabbix-agent
  become: true

- name: Copy /etc/default/mit-check-upgrades
  ansible.builtin.template:
    src: Debian/mit-check-upgrades
    dest: /etc/default/mit-check-upgrades
    mode: "644"
    force: "no"

- name: Copy binaries
  ansible.builtin.copy:
    src: Debian/{{ item }}
    dest: /opt/bin/
    mode: "0755"
  loop:
    - zabbix-check-upgradeable-packages-system
    - zabbix-check-upgrades
    - zabbix-checkrestart-kernel
    - zabbix-checkrestart-service

- name: Copy /etc/cron.d/local-zabbix-check-upgrades
  ansible.builtin.copy:
    src: Debian/cron.d/local-zabbix-check-upgrades
    dest: /etc/cron.d/
    mode: "644"

- name: Configure cron for zabbix-checkrestart-kernel
  ansible.builtin.cron:
    user: zabbix
    name: Check if kernel needs a restart
    # special_time: hourly - save ressources, we only need this at working time
    minute: 55
    hour: 6-17
    job: /opt/bin/zabbix-checkrestart-kernel
    state: "{{ 'absent' if (is_lxc) else 'present' }}"

# On Debian we call zabbix-checkrestart-service from zabbix-check-upgrades
- name: Remove cron for zabbix-checkrestart-service (will be called from zabbix-check-upgrades)
  ansible.builtin.cron:
    user: zabbix
    name: Check if service needs a restart
    # special_time: hourly - save ressources, we only need this at working time
    minute: 56
    hour: 6-17
    job: /opt/bin/zabbix-checkrestart-service
    state: absent

- name: Add cron for zabbix-check-upgradeable-packages-system
  ansible.builtin.cron:
    user: zabbix
    name: Check if there are upgradeable system packages
    # special_time: hourly - save ressources, we only need this at working time
    minute: 57
    hour: 6-17
    job: /opt/bin/zabbix-check-upgradeable-packages-system

- name: Remove deprecated /var/lib/misc/zabbix-check-upgrades-dpkg-log.sha1
  ansible.builtin.file:
    path: /var/lib/misc/zabbix-check-upgrades-dpkg-log.sha1
    state: absent

- name: Gather the package facts
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined

- name: Logcheck rules
  # Security Events for sudo
  # The file has to be named "local", either "a", "0-mit-zabbix-agent-check-upgrades"
  # or "mit-zabbix-agent-check-upgrades" do not work. Test with:
  # sudo -u logcheck logcheck -o -t -d -l /var/log/auth.log
  ansible.builtin.lineinfile:
    create: true
    path: /etc/logcheck/violations.ignore.d/local
    line: "^\\w{3} [ :0-9]{11} [._[:alnum:]-]+ sudo:   zabbix : PWD=.* ; USER=root ; COMMAND=\\/usr\\/sbin\\/needrestart -b -r l -k$"
    mode: "644"
  when: "'logcheck' in ansible_facts.packages and ansible_distribution == 'Debian' and ansible_distribution_major_version|int == 11"

- name: Remove deprecated files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /opt/bin/zabbix-checkrestart
    - /usr/local/sbin/zabbix-check-upgrades
